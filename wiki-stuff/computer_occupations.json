{"Computer operator": "{{Unreferenced|date=December 2009}}\nA role in [[Information technology|IT]], '''computer operators''' oversee the running of computer systems, ensuring that the machines are running and physically secured and free of any bugs. The former role of a computer operator was to work with [[mainframe computer]]s which required a great deal of management day-to-day, however nowadays they often work with a variety of different systems and applications. The computer operator normally works in a [[server room]] or a [[data centre]], but can also work remotely so that they can operate systems across multiple sites. Most of their duties are taught on the job, as their job description will vary according to the systems and set-up they help manage.\n\nThe role also includes maintaining records and logging events, listing e.g. each backup that is run, each machine malfunction and program abnormal termination. Operators assist [[Systems administrator|System administrators]] and programmers in testing and debugging of new systems and programs prior to their becoming production environments. \n\nModern-day computing has led to a greater proliferation of personal computers, with a rapid change from older mainframe systems to newer self-managing systems. This is reflected in the operator's role. Tasks may include managing the [[Object storage device|backup systems]], cycling [[Computer media|tapes or other media]], filling and maintaining [[Computer printer|printers]]. Overall the operator fills in as a lower level system administrator or operations analyst. Most operations departments will work [[24x7]].\n\nA computer operator also has knowledge of [[disaster recovery]] and [[business continuity]] procedures. Formerly this would have meant sending physical data tapes offsite, but now the data is more than likely transmitted over computer networks.\n\nA computer operator can work inside the home on the network editing domains and nets or they can work on the road or part of a company.\n\n{{DEFAULTSORT:Computer Operator}}\n[[Category:Computer occupations]]", "Database administrator": "{{Infobox Occupation\n|caption= Database Administrator\n|official_names= Database Administrator , Database Analyst\n|type=[[Profession]]\n|activity_sector=[[Information technology]], [[Information Systems]]\n|competencies= [[Database Design|Databases Design and Implementation]], [[Computer programming|Programming skills]], [[Database theory]], [[Computer network|Networking Basics]], [[analytical skill]]s, [[critical thinking]]\n|formation='''At Least Bachelor Degree in Related Field Like :''' [[Information systems]] , [[Information Technology]], [[Computer Science]] , [[Management information system|Management Information system]]\n}}\n\nA '''Database Administrator''' (acronym: '''DBA''') is an [[IT Professional]] responsible for :\n*[[Installation (computer programs)|Installation]]\n*[[Computer configuration|Configuration]]\n*[[Upgrade]]\n*[[System administrator|Administration]]\n*[[System Monitoring|Monitoring]]\n*[[Software maintenance|Maintenance]] \n*[[Computer Security|Securing]] \nof [[Databases]] in an organization.<ref name=SFIA>{{cite web|url=http://scripts.bcs.org/sfiaplus/sfia-skills.htm#dbad|title=Database Administration|work=[[SFIAPlus]]|publisher=[[British Computer Society]]|accessdate=2012-02-06}}</ref>\n\nThe role includes the [[Software development|development]] and [[design]] of database [[Strategy|strategies]], [[system monitoring]] and improving database [[Computer performance|performance]] and [[Capacity management|capacity]], and [[planning]] for future expansion requirements. They may also plan, [[Cooperation|co-ordinate]] and [[Implementation (computer science)|implement]] [[Computer security|security]] measures to safeguard the database.<ref name=ACS>{{cite web|url=http://www.acs.org.au/ictcareers/index.cfm?action=show&conID=200707200948211895|title=Database Administrator|work=ICT Careers Portal|publisher=[[Australian Computer Society]]|accessdate=2012-02-06}}</ref>\n\n==Skills==\n\nList of skills required to become database administrators are:<ref>{{cite web|last1=Spenik|first1=Mark|last2=Sledge|first2=Orryn|date=2001-03-20|url=http://www.developer.com/db/article.php/718491/What-Is-a-Database-Administrator.htm|title=What is a Database Administrator? (DBA)|publisher=Developer.com|accessdate=2012-02-06|archiveurl=http://web.archive.org/web/20110613101702/http://www.developer.com/db/article.php/718491/What-Is-a-Database-Administrator.htm|archivedate=2011-06-13}}</ref><ref>http://www.dba-oracle.com/oracle_tips_dba_job_skills.htm</ref><ref>http://www.orafaq.com/wiki/Roles_and_Responsibilities</ref>\n\n* [[Communication]] skills\n* Knowledge of [[database theory]]\n* Knowledge of [[database design]]\n* Knowledge about the [[RDBMS]] itself, e.g. [[Oracle Database]], [[IBM DB2]], [[Microsoft SQL Server]], [[Adaptive Server Enterprise]], [[MaxDB]], [[PostgreSQL]]\n* [[Knowledge]] of [[SQL|Structured Query Language (SQL)]] \n** e.g.  [[SQL/PSM]],  [[Transact-SQL]]\n* General [[understanding]] of [[Distributed computing|distributed computing architectures]], e.g. [[Client\u2013server model|Client/Server]], [[Internet]]/[[Intranet]], [[Enterprise architecture|Enterprise]]\n* General understanding of the underlying [[operating system]], e.g. [[Microsoft Windows|Windows]], [[Unix]], [[Linux]]\n* General understanding of [[Computer data storage|storage technologies]], [[memory management]], [[disk array]]s, [[Network attached storage|NAS]]/[[Storage area network|SAN]], [[Computer network|networking]]\n* General understanding of routine maintenance, recovery, and handling failover of a Database\n\n===Education===\n\nSome employers require a Bachelor's Degree or higher in Computer Science, Information Technology, Engineering, or related field to perform job duties as a Database Administrator. In general, DBA's work with commercial databases such as SQL Server, Oracle, MongoDB and many others.\n\n===Certification===\nEmploying organizations may require that a database administrator have a [[certification]] for the particular [[RDBMS]] being used.<ref name=ACS/>\n\nExamples \n*''Oracle Database 11g Administrator Certified Professional''<ref>{{cite web |url=http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=143&p_org_id=1001&lang=US |title=Oracle Certification Program |work=[[Oracle Corporation]] |accessdate=2011-06-18}}</ref> \n*''[[Microsoft Certified Professional|MCSA SQL Server 2012]]''.<ref name=microsoft>{{cite web |url=http://www.microsoft.com/learning/en/us/certification/cert-sql-server.aspx#tab1 |title=Microsoft SQL Server Certification |work=[[Microsoft|Microsoft Corporation]] |accessdate=2012-02-06}}</ref>\n\n==Duties==\nA database administrator's responsibilities can include the following tasks:<ref>{{cite web |url=http://docs.oracle.com/cd/B10501_01/server.920/a96521/dba.htm#852 |title=Oracle DBA Responsibilities |work=[[Oracle Corporation]] |accessdate=2012-02-06}}</ref>\n\n* [[Installation (computer programs)|Installing]] and [[upgrade|upgrading]] the database server and application tools\n* Allocating system storage and [[planning]] future storage requirements for the database system\n* Modifying the database structure, as necessary, from information given by application developers\n* Enrolling users and maintaining system [[Computer security|security]]\n* Ensuring compliance with database vendor [[license agreement]]\n* Controlling and [[System Monitoring|monitoring]] [[user (computing)|user]] access to the database\n* Monitoring and [[Program optimization|optimizing]] the performance of the database\n* Planning for [[backup]] and recovery of database information\n* Maintaining [[archive]]d data\n* Backing up and restoring databases\n* Contacting database [[vendor]] for [[technical support]]\n* Generating various reports by querying from database as per need.\n\n==Job titles==\nDBAs are also known{{by whom|date=October 2013}} by the titles ''Database Coordinator'' or ''Database Programmer'', although a database programmer requires more advanced skills in SQL programming than a DBA may have, and Database Programmers may not have and do not require the skills of database administration, backing up, restoring, monitoring or tuning to do their job well.<ref name=ACS/>\n\nThe role integrates closely with the other jobs of ''Database Analyst'', ''Database Modeller'', [[programmer analyst|Programmer Analyst]], and [[Systems Manager]].<ref name=ACS/>\n\nSome organizations{{Clarify|date=September 2012}} have a [[Hierarchical organization|hierarchical]] system of database administrators, generally:<ref>\n{{cite web |url=http://www.bestsampleresume.com/job-descriptions/database-administrator.html |title=Database Administrator Job Description |accessdate=2012-11-14}}\n</ref>\n\n* Junior DBAs\n* Mid-level DBAs\n* Senior DBAs\n* DBA consultants\n* Manager/Director of Database Administration/Information Technology\n\n==References==\n{{Reflist}}\n\n==External links==\n* The US Department of Labor's description of \"[http://www.bls.gov/ooh/computer-and-information-technology/database-administrators.htm Database Administrators]\"\n\n{{Database}}\n{{Use British English|date=June 2012}}\n{{Use dmy dates|date=June 2012}}\n\n{{DEFAULTSORT:Database Administrator}}\n[[Category:Computer occupations]]\n[[Category:Data management]]\n[[Category:Database specialists| ]]", "Computer scientist": "{{distinguish|computational scientist}}\n{{refimprove|date=June 2012}}  \nA '''computer scientist''' is a [[scientist]] who has acquired knowledge of [[computer science]], the study of the theoretical foundations of information and computation and their application.\n\nComputer scientists typically work on the theoretical side of computer systems, as opposed to the [[computer hardware|hardware]] side that [[computer engineer]]s mainly focus on (although there is overlap). Although computer scientists can also focus their work and research on specific areas (such as [[algorithm]] and [[data structure]] development and design, [[software engineering]], [[information theory]], [[database theory]], [[computational complexity theory]], [[human-computer interaction]], [[numerical analysis]], [[programming language theory]], [[computer graphics]], and [[computer vision]]), their foundation is the theoretical study of computing from which these other fields derive.<ref name=\"salary\">{{cite web|url=http://www.bls.gov/ooh/Computer-and-Information-Technology/Computer-and-information-research-scientists.htm |title=Computer and Information Research Scientists |publisher=U.S. Bureau of Labor Statistics |date=March 29, 2012  |accessdate=2012-06-03}}</ref>\n\n==Education==\nMost computer scientists are required to possess a [[Ph.D.]], [[M.S.]], or [[B.S.]] in Computer Science or a closely related discipline such as [[mathematics]].<ref name=\"salary\"/> A strong aptitude for math is important for a computer scientist.\n\nGood communication skills are also important for a computer scientist. Since computer scientists often work in teams on large projects, they must be able to communicate effectively with computer personnel, such as programmers and managers, as well as with users or other staff who may have no technical computer background.<ref name=\"autogenerated2\">{{cite web |author=Benjamin Beau Perry |url=http://people.cis.ksu.edu/~bbp9857/cs.html |title=What is a computer scientist? |publisher=The University of Newcastle}}</ref>\n\n==Employment==\nComputer scientists are often hired by software publishing firms, scientific research and development organizations where they develop the theories that allow new technologies to be developed. Computer scientists are also employed by educational institutions as well as [[universities]].\n\nComputer scientists can follow more practical applications of their knowledge, doing things such as software engineering. Computer scientists can also be found in the field of [[information technology consulting]]. Computer scientists can also be seen as a type of [[mathematician]], seeing as how much of the field is dependent on mathematics itself.<ref>{{cite web|url=http://computingcareers.acm.org/?page_id=8 |title=Computing Degrees & Careers \u00bb Computer Science |publisher=Computingcareers.acm.org |date= |accessdate=2012-06-03}}</ref>\n\nComputer scientists employed in industry may eventually advance into managerial or project leadership positions.<ref name=\"autogenerated2\"/>\n\nEmployment prospects for computer scientists are said to be excellent. Such excellent prospects seem to be attributed, in part, to very rapid growth in computer systems design and related services industry, as well as the software publishing industry, which are projected to be among the fastest growing industries in the U.S. economy.<ref name=\"salary\"/>\n\n==See also==\n{{div col|colwidth=20em}}\n* [[Computational scientist]]\n* [[Computer ethics]]\n* [[List of computer scientists]]\n* [[List of computing people]]\n* [[Software engineer]]\n{{div col end}}\n\n==References==\n{{Reflist}} \n\n{{Use British English|date=June 2012}}\n{{Use dmy dates|date=June 2012}}  \n\n{{DEFAULTSORT:Computer Scientist}}\n[[Category:Computer scientists| ]]\n[[Category:Computer occupations| ]]", "Software quality analyst": "A '''software quality analyst''' is responsible for applying the principles and practices of [[software quality assurance]] throughout the [[software development process|software development life cycle]].  Though often referred to as \"quality assurance\", [[software testing]] is considered to be only one part of the larger process of reducing errors.<ref>http://c2.com/cgi/wiki?QaIsNotQc</ref>  Testing is used to detect errors in a product; software quality assurance also fixes the processes that resulted in those errors.\n\nRoles in Software Quality Assurance are designated as Software Quality Assurance Engineer, Software Quality Analyst, and Process Consultant.{{fact|date=July 2012}}\n\nSome of the tasks of software quality analysts are:{{facts|date=July 2012}}\n\n* Participate in QMS management review meetings.\n* Approves the QMS documents for which QA manager is the main author.\n* Undertake internal quality audits.\n* Plan and conduct quality audits of subcontractors.\n* Maintain and update training and audit databases to provide reports / indicators for discussion during QMS management review meetings\n* Identify problems or deficiencies in products and QMS.\n* Resolve problems QMS implementation issues.\n* Perform Internal Quality Audit.\n* Participate in External Quality Audit.\n* Track all the software related metrics in terms of schedule,effort,defects etc.\n* Review the model followed by project.\n\n== References ==\n<references />\n{{reflist}}\n\n[[Category:Software quality]]", "Data scientist": "#REDIRECT [[Data science]]", "Data analyst": "#REDIRECT [[Data analysis]]", "Software design": "{{refimprove|date=January 2013}}\nThis article is about the activity between requirements and programming. For the broader meaning, see [[software development]].\n\n{{Software development process}}\n\n'''Software design''' is the process by which an [[Agency (philosophy)|agent]] creates a specification of a [[Artifact (software development)|software artifact]], intended to accomplish [[goal]]s, using a set of primitive components and subject to [[constraint (mathematics)|constraint]]s.<ref>Ralph, P. and Wand, Y. (2009). A proposal for a formal definition of the design concept. In Lyytinen, K., Loucopoulos, P., Mylopoulos, J., and Robinson, W., editors, Design Requirements Workshop (LNBIP 14), pp. 103\u2013136. Springer-Verlag, p. 109 {{DOI|10.1007/978-3-540-92966-6_6}}.</ref> Software design may refer to either \"all the activities involved in conceptualizing, framing, implementing, commissioning, and ultimately modifying complex systems\" or \"the activity following [[Software requirements|requirements]] specification and before [[Computer programming|programming]], as ... [in] a stylized software engineering process.\"<ref>{{cite journal|last=Freeman|first=Peter|coauthors=David Hart|title=A Science of design for software-intensive systems|journal=Communications of the ACM|year=2004|volume=47|issue=8|pages=19\u201321 [20]|doi=10.1145/1012037.1012054}}</ref>\n\nSoftware design usually involves problem solving and planning a [[software]] solution. This includes both low-level component and [[algorithm design]] and high-level, [[software architecture|architecture]] design.\n\n== Overview ==\n\nSoftware design is the process of implementing software solutions to one or more set of problems.\nOne of the important parts of software design is the [[software requirements analysis]] (SRA). It is a part of the [[software development process]] that lists [[specifications]] used in [[software engineering]]. If the software is \"semi-automated\" or [[user centered design|user centered]], software design may involve [[user experience design]] yielding a [[story board]] to help determine those specifications. If the software is completely [[automation|automated]] (meaning no [[user (computing)|user]] or [[user interface]]), a software design may be as simple as a [[flow chart]] or text describing a planned sequence of events. There are also semi-standard methods like [[Unified Modeling Language]] and [[Fundamental modeling concepts]]. In either case, some [[documentation]] of the plan is usually the product of the design. Furthermore, a software design may be [[platform-independent model|platform-independent]] or [[platform-specific model|platform-specific]], depending on the availability of the technology used for the design.\n\nSoftware design can be considered as creating a solution to a problem in hand with available capabilities. The main difference between Software analysis and design is that the output of a software analysis consist of smaller problems to solve. Also, the analysis should not be very different even if it is designed by different team members or groups. The design focuses on the capabilities, and there can be multiple designs for the same problem depending on the environment that solution will be hosted. They can be operations systems, webpages, mobile or even the new cloud computing paradigm. Sometimes the design depends on the environment that it was developed, whether if it is created from with reliable [[Software framework|frameworks]] or implemented with suitable [[design patterns]].\n\nWhen designing software, two important factors to consider are its security and usability\n\n== Software Design ==\n\n===Design Principles===\nSoftware design is both a process and a model. The design process is a sequence of steps that enable the designer to describe all aspects of the software to be built. It is important to note, however, that the design process is not simply a cookbook. Creative skill, past experience, a sense of what makes \u201cgood\u201d software, and an overall commitment to quality are critical success factors for a competent design. The design model is the equivalent of an architect\u2019s plans for a house. It begins by representing the totality of the thing to be built (e.g., a three-dimensional rendering of the house) and slowly re\ufb01nes the thing to provide guidance for constructing each detail (e.g., the plumbing layout). Similarly, the design model that is created for soft- ware provides a variety of different views of the computer software. Basic design principles enable the software engineer to navigate the design process. Davis [DAV95] suggests a set of principles for software design, which have been adapted and extended in the following list:\n* '''The design process should not suffer from \u201ctunnel vision.\u201d''' A good designer should consider alternative approaches, judging each based on the requirements of the problem, the resources available to do the job. \n* '''The design should be traceable to the analysis model.''' Because a single element of the design model often traces to multiple requirements, it is necessary to have a means for tracking how requirements have been satis\ufb01ed by the design model. \n* '''The design should not reinvent the wheel.''' Systems are constructed using a set of design patterns, many of which have likely been encountered before. These patterns should always be chosen as an alternative to reinvention. Time is short and resources are limited! Design time should be invested in representing truly new ideas and integrating those patterns that already exist. \n* '''The design should \u201cminimize the intellectual distance\u201d between the software and the problem as it exists in the real world.''' That is, the structure of the software design should (whenever possible) mimic the structure of the problem domain. \n* '''The design should exhibit uniformity and integration.''' A design is uni- form if it appears that one person developed the entire thing. Rules of style and format should be de\ufb01ned for a design team before design work begins. A design is integrated if care is taken in de\ufb01ning interfaces between design components.\n* '''The design should be structured to accommodate change.''' The design concepts discussed in the next section enable a design to achieve this principle.\n* '''The design should be structured to degrade gently, even when aberrant data, events, or operating conditions are encountered.''' Well- designed software should never \u201cbomb.\u201d It should be designed to accommodate unusual circumstances, and if it must terminate processing, do so in a graceful manner.\n* '''Design is not coding, coding is not design.''' Even when detailed procedural designs are created for program components, the level of abstraction of the design model is higher than source code. The only design decisions made at the coding level address the small implementation details that enable the procedural design to be coded.\n* '''The design should be assessed for quality as it is being created, not after the fact.''' A variety of design concepts and design measures are available to assist the designer in assessing quality.\n* '''The design should be reviewed to minimize conceptual (semantic) errors.''' There is sometimes a tendency to focus on minutiae when the design is reviewed, missing the forest for the trees. A design team should ensure that major conceptual elements of the design (omissions, ambiguity, inconsistency) have been addressed before worrying about the syntax of the design model.\n\n===Design Concepts===\nThe design concepts provide the software designer with a foundation from which more sophisticated methods can be applied. A set of fundamental design concepts has evolved. They are:\n\n#[[Abstraction (computer science)|Abstraction]] - Abstraction is the process or result of generalization by reducing the information content of a concept or an observable phenomenon, typically in order to retain only information which is relevant for a particular purpose.\n#[[Program refinement|Refinement]] - It is the process of elaboration. A hierarchy is developed by decomposing a macroscopic statement of function in a step-wise fashion until programming language statements are reached. In each step, one or several instructions of a given program are decomposed into more detailed instructions. Abstraction and Refinement are complementary concepts.\n#[[Modularity]] - Software architecture is divided into components called modules.\n#[[Software Architecture]] - It refers to the overall structure of the software and the ways in which that structure provides conceptual integrity for a system. A good software architecture will yield a good return on investment with respect to the desired outcome of the project, e.g. in terms of performance, quality, schedule and cost.\n#[[Control Hierarchy]] - A program structure that represents the organization of a program component and implies a hierarchy of control.\n#[[Structural Partitioning]] - The program structure can be divided both horizontally and vertically. Horizontal partitions define separate branches of modular hierarchy for each major program function. Vertical partitioning suggests that control and work should be distributed top down in the program structure.\n#[[Data Structure]] - It is a representation of the logical relationship among individual elements of data.\n#[[Software Procedure]] - It focuses on the processing of each modules individually\n#[[Information Hiding]] - Modules should be specified and designed so that information contained within a module is inaccessible to other modules that have no need for such information\n\n=== Design considerations ===\nThere are many aspects to consider in the design of a piece of software.  The importance of each should reflect the goals the software is trying to achieve.  Some of these aspects are:\n\n* '''Compatibility''' - The software is able to operate with other products that are designed for interoperability with another product.  For example, a piece of software may be backward-compatible with an older version of itself.\n* '''[[Extensibility]]''' - New capabilities can be added to the software without major changes to the underlying architecture.\n* '''[[Fault-tolerance]]''' - The software is resistant to and able to recover from component failure.\n* '''[[Maintainability]]''' - A measure of how easily bug fixes or functional modifications can be accomplished. High maintainability can be the product of modularity and extensibility.\n* '''[[Modularity]]''' - the resulting software comprises well defined, independent components. That leads to better maintainability. The components could be then implemented and tested in isolation before being integrated to form a desired software system. This allows division of work in a software development project.\n* '''Reliability''' - The software is able to perform a required function under stated conditions for a specified period of time.\n* '''[[Reusability]]''' - the software is able to add further features and modification with slight or no modification.\n* '''[[Fault-tolerant system|Robustness]]''' - The software is able to operate under stress or tolerate unpredictable or invalid input.  For example, it can be designed with a resilience to low memory conditions.\n* '''[[Computer security|Security]]''' - The software is able to withstand hostile acts and influences.\n* '''[[Usability]]''' - The software [[user interface]] must be usable for its target user/audience. Default values for the parameters must be chosen so that they are a good choice for the majority of the users.<ref>{{cite book|last=Carroll, ed.|first=John|title=Scenario-Based Design: Envisioning Work and Technology in System Development|year=1995|publisher=John Wiley & Sons|location=New York|isbn=0471076597}}</ref>\n* '''[[Performance]]''' - The software performs its tasks within a user-acceptable time. The software does not consume too much memory.\n* '''[[Software portability|Portability]]''' - The usability of the same software in different environments.\n* '''[[Scalability]]''' - The software adapts well to increasing data or number of users.\n\n=== Modeling language ===\nA [[modeling language]] is any artificial language that can be used to express information or knowledge or systems in a structure that is defined by a consistent set of rules. The rules are used for interpretation of the meaning of components in the structure. A modeling language can be graphical or textual. Examples of graphical modeling languages for software design are:\n* [[Business Process Modeling Notation]] (BPMN) is an example of a [[Process Modeling]] language.\n* [[EXPRESS (data modeling language)|EXPRESS]] and EXPRESS-G (ISO 10303-11) is an international standard general-purpose [[data modeling]] language.\n* [[Extended Enterprise Modeling Language]] (EEML) is commonly used for business process modeling across a number of layers.\n* [[Flowchart]] is a schematic representation of an algorithm or a step-wise process,\n* [[Fundamental Modeling Concepts]] (FMC) modeling language for software-intensive systems.\n* [[IDEF]] is a family of modeling languages, the most notable of which include [[IDEF0]] for functional modeling, [[IDEF1X]] for information modeling, and [[IDEF5]] for modeling ontologies.\n* [[Jackson Structured Programming]] (JSP) is a method for structured programming based on correspondences between data stream structure and program structure\n* [[Lepus3|LePUS3]] is an [[object-oriented]] visual Design Description Language and a [[formal specification]] language that is suitable primarily for modelling large object-oriented ([[Java (programming language)|Java]], [[C++]], [[C Sharp (programming language)|C#]]) programs and [[design patterns]].\n* [[Unified Modeling Language]] (UML) is a general modeling language to describe software both structurally and behaviorally.  It has a graphical notation and allows for extension with a [[Profile (UML)]].\n* [[Alloy (specification language)]] is a general purpose specification language for expressing complex structural constraints and behavior in a software system. It provides a concise language based on first-order relational logic.\n* [[Systems Modeling Language]] (SysML) is a new [[general-purpose modeling]] language for systems engineering.\n\n=== Design patterns ===\nA software designer or architect may identify a design problem which has been solved by others before.  A template or pattern describing a solution to a common problem is known as a [[Design pattern (computer science)|design pattern]].  The reuse of such patterns can speed up the software development process, having been tested and proven in the past.\n\n=== Usage ===\n[[Software design document]]ation may be reviewed or presented to allow constraints, specifications and even requirements to be adjusted prior to [[computer programming]]. Redesign may occur after review of a programmed [[simulation]] or [[prototype]]. It is possible to design software in the process of programming, without a plan or requirement analysis,<ref>Ralph, P., and Wand, Y. A Proposal for a Formal Definition of the Design Concept. In, Lyytinen, K., Loucopoulos, P., Mylopoulos, J., and Robinson, W., (eds.), Design Requirements Engineering: A Ten-Year Perspective: Springer-Verlag, 2009, pp. 103-136</ref> but for more complex projects this would not be considered a professional approach. A separate design prior to programming allows for [[multidisciplinary]] designers and [[Subject Matter Expert]]s (SMEs) to collaborate with highly skilled programmers for software that is both useful and technically sound.\nMaking of robots is also a huge use of software design\n\n== See also ==\n{{Commons category|Software design}}\n* [[Aspect-oriented software development]]\n* [[Bachelor of Science in Information Technology]]\n* [[Design rationale]]\n* [[Interaction design]]\n* [[Icon design]]\n* [[Search-based software engineering]]\n* [[Software Design Description]] (IEEE 1016)\n* [[Software development]]\n* [[User experience]]\n* [[User interface design]]\n* [[Zero One Infinity]]\n\n== References ==\n{{reflist}}\n[[Software design#Design Principles|^]]{{cite book |author= Roger S. Pressman |title= Software engineering: a practitioner\u2019s approach |publisher= McGraw-Hill |isbn= 0-07-365578-3 }}\n{{Computer science}}\n{{Software engineering}}\n\n{{DEFAULTSORT:Software Design}}\n[[Category:Computer occupations]]\n[[Category:Software design|*]]", "Web developer": "{{for|the Mozilla extension|Web Developer (Mozilla extension)}}\n{{Refimprove|date=May 2013}}\n\nA '''web developer''' is a [[programmer]] who specializes in, or is specifically engaged in, the development of [[World Wide Web]] applications, or distributed network applications that are run over [[HTTP]] from a [[web server]] to a [[web browser]].\n\n== Nature of employment ==\n\nWeb developers can be found working in all types of organizations,including large [[corporations]] and [[governments]], small and medium sized [[companies]], or alone as [[freelancers]]. Some web developers work for one organization as a permanent [[full-time]] employee, while others may work as independent [[consultants]], or as contractors for an [[employment agency]]\n\n== Type of work performed ==\n\nModern [[web applications]] often contain three or more [[Multitier architecture|tiers]],<ref>{{cite web | url=http://docforge.com/wiki/Web_application#Components | title=Web application | author=Multiple (wiki) | work=Docforge | accessdate=2012-12-07 }}</ref> and depending on the size of the team a developer works on, he or she may specialize in one or more of these tiers - or may take a more [[interdisciplinary]] role.<ref>{{cite web | url=http://docforge.com/wiki/Web_development | title=Web development | author=Multiple (wiki) | work=Docforge | accessdate=2012-12-07 }}</ref> For example, in a two person team, one developer may focus on the technologies sent to the [[Client-side|client]] such as [[HTML]], [[JavaScript]], [[CSS]], and on the [[server-side]] frameworks (such as [[Perl]], [[Python (programming language)|Python]], [[Ruby (programming language)|Ruby]], [[PHP]], [[Java (programming language)|Java]], [[Active Server Pages|ASP]], [[.NET Framework|.NET]], [[ASP.NET MVC Framework|.NET MVC]]) used to deliver content and scripts to the client. Meanwhile the other developer might focus on the interaction between server-side frameworks, the [[web server]], and a [[database]] system. Further, depending on the size of their organization, the aforementioned developers might work closely with a content creator/copy writer, marketing advisor, [[web designer]], [[web producer]], [[project manager]], [[software architect]], or [[database administrator]] - or they may be responsible for such tasks as [[web design]] and [[project management]] themselves.\n\n== Educational and licensure requirements ==\n\nThere are no formal educational or licensure requirements to become a web developer. However, many colleges and trade schools offer coursework in web development. There are also many tutorials and articles, which teach web development, freely available on the web - for example: http://en.wikiversity.org/wiki/Basic_JavaScript\n\nEven though there are no formal educational requirements, dealing with web developing projects requires those who wish to be referred to as web developers to have advanced knowledge/skills in:\n* HTML/XHTML, CSS, JavaScript\n* [[server-side|Server]]/[[Client-side|Client]] side architecture \n* Programming/Coding/Scripting in one of the many server-side frameworks (at least one of: [[Perl]], [[Python (programming language)|Python]], [[Ruby (programming language)|Ruby]], [[PHP]], [[ColdFusion Markup Language|CFML - ColdFusion]], [[Java (programming language)|Java]], [[Active Server Pages|ASP]], [[.NET Framework|.NET]], [[ASP.NET MVC Framework|.NET MVC]])\n* Ability to utilize a [[Web development#Database_Technology|database]]\n\n== See also ==\n* [[Web design]]\n* [[Web development]]\n* [[Web engineering]]\n* [[Software developer]]\n\n==References==\n{{reflist|2}}\n\n== External links ==\n{{Wikiversity|Web design}}\n* The US Department of Labor's description of \"[http://www.bls.gov/ooh/computer-and-information-technology/web-developers.htm Web Developers]\"\n* [http://www.w3.org/standards/webdesign/ W3C consortium for web standards]\n* {{dmoz|Computers/Internet/Web_Design_and_Development|Web design and development}}\n\n[[Category:Web development]]\n[[Category:Computer occupations]]\n\n[[nl:Webdevelopment]]\n[[ru:\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a]]", "Network Analyst": "#redirect[[Network administrator]]", "Software analyst": "{{Unreferenced|date=December 2009}}\nIn a [[software development]] team, a '''software analyst''' is the person who studies the software application domain and prepares the software [[requirement]]s and [[specification]] ([[Software Requirements Specification]]) document. Software analyst is the seam between the software users and the software developers. It conveys the demands of the software users to the developers. A software analyst is expected to have the following skills:\n\n*Working knowledge of software technology\n*Computer [[Computer Programming|programming]] experience and expertise\n*General business knowledge\n*Problem solving and problem reduction skills\n*Interpersonal relation skills\n*Be flexible and adaptable\n\n==See also==\n*[[Systems analyst]]\n\n\n{{DEFAULTSORT:Software Analyst}}\n[[Category:People in information technology]]\n[[Category:Software engineering]]\n[[Category:Computer occupations]]", "Application analyst": "{{Unreferenced|auto=yes|date=December 2009}}\nIn the USA, an '''application analyst''' is someone whose job is to support a given [[application software|application]] or applications. This may entail some [[computer programming]], some [[system administration]] skills, and the ability to analyse a given problem, diagnose it and find its root cause, and then either solve it or pass the problem on to the relevant people if it does not lie within the application analyst's area of responsibility. Typically an application analyst will be responsible for supporting [[bespoke]] (i.e. custom) applications programmed with a variety of programming languages and using a variety of database systems, middleware systems and the like. It is a form of 3rd level line [[technical support]]. The role may or may not involve some customer contact but most often it involves getting some description of the problem from [[helpdesk]], making a diagnosis and then either creating a fix or passing the problem on to someone who is responsible for the actual problem area.\n\nIn some companies, an '''application analyst''' is a would-be [[software architect]].\n\n{{DEFAULTSORT:Application Analyst}}\n[[Category:Computer occupations]]\n\n\n{{Job-stub}}", "Programmer": "{{about|people who write computer software}}\n: ''For someone who performs coding in the social sciences, see [[Coding (social sciences)]].''\n{{Redirect|Coder||Encoder}}\n\n[[File:Bundesarchiv B 145 Bild-F031434-0006, Aachen, Technische Hochschule, Rechenzentrum.jpg|thumb|Student programmers at the [[Technische Hochschule]] in [[Aachen]], Germany in 1970]]\nA '''programmer''', '''computer programmer''', '''developer''', '''coder''', or '''software engineer''' is a person who writes [[computer software]]. The term ''computer programmer'' can refer to a specialist in one area of [[computer programming]] or to a generalist who writes code for many kinds of software. One who practices or professes a formal approach to programming may also be known as a programmer analyst. A programmer's primary [[computer language]] ([[C (programming language)|C]], [[C++]], [[C Sharp (programming language)|C#]], [[Java (programming language)|Java]], [[Lisp (programming language)|Lisp]], [[Python programming language|Python]], etc.) is often prefixed to the above titles, and those who work in a [[World Wide Web|web]] environment often prefix their titles with ''Web''. The term ''programmer'' can be used to refer to a [[software developer]], [[Web developer]], mobile applications developer, embedded [[firmware]] developer, [[software engineer]], [[computer scientist]], or [[software analyst]]. However, members of these [[profession]]s typically{{Citation needed|date=March 2011}} possess other [[software engineering]] skills, beyond programming; for this reason, the term ''programmer'', or ''code monkey'', is sometimes considered an insulting or derogatory oversimplification of these other professions.<ref>{{cite news|title=Yes, calling \"programmer\" to a \"software engineer\" is an insult. |url=http://www.ata.io/calling-programmer-to-a-software-engineer-is-an-insult/}}</ref> This has sparked much debate amongst developers, analysts, computer scientists, programmers, and outsiders who continue to be puzzled at the subtle differences in the definitions of these occupations.<ref>{{cite news|title=No Programmers |url=http://www.ericsink.com/No_Programmers.html}}</ref><ref>{{cite news|title=Developer versus programmer |url=http://codebetter.com/blogs/raymond.lewallen/archive/2005/02/22/55812.aspx}}</ref><ref>{{cite news|title=Developers AND Programmers |url=http://weblogs.asp.net/miked/archive/2006/10/13/_2200_Developers_2200_-and-_2200_Programmers_2200_.aspx}}</ref><ref>{{cite news|title=Programmer vs. Developer vs. Software Engineer |url=http://discuss.joelonsoftware.com/default.asp?joel.3.112837.37}}</ref><ref>{{cite news|title=Programmer vs. Developer vs. Software Engineer |url=http://www.xtremevbtalk.com/archive/index.php/t-233780.html}}</ref>\n\n[[Image:Ada Lovelace portrait.jpg|thumb|200px|right|[[Ada Lovelace]], the first computer programmer.<ref>{{cite book|first=J.|last=Fuegi|first2=J.|last2=Francis|title=Lovelace & Babbage and the creation of the 1843 'notes'|journal=Annals of the History of Computing|volume=25|issue=4 |year=2003|pages=18\u201326|doi=10.1109/MAHC.2003.1253887}}</ref>]]\nBritish countess and mathematician [[Ada Lovelace]] is considered the first computer programmer, as she was the first to write and publish an [[algorithm]] intended for implementation on [[Charles Babbage]]'s [[analytical engine]], in October 1842, intended for the calculation of [[Bernoulli number]]s.<ref>J. Fuegi and J. Francis, \"Lovelace & Babbage and the creation of the 1843 'notes'.\" Annals of the History of Computing 25 #4 (October\u2013December 2003): 19, 25. [http://dx.doi.org/10.1109/MAHC.2003.1253887 Digital Object Identifier]</ref> Lovelace was also the first person to comment on the potential for computers to be used for purposes other than computing calculations.  Because Babbage's machine was never completed to a functioning standard in her time, she never saw her algorithm run.\n\nThe first person to run a program on a functioning modern electronically based computer was [[computer scientist]] [[Konrad Zuse]], in 1941.\n\nThe [[ENIAC]] programming team, consisting of [[Kathleen Antonelli|Kay McNulty]], [[Jean Bartik|Betty Jennings]], [[Betty Holberton|Betty Snyder]], [[Marlyn Meltzer|Marlyn Wescoff]], [[Frances Spence|Fran Bilas]] and [[Ruth Teitelbaum|Ruth Lichterman]] were the first regularly working programmers.<ref>{{cite web|url=http://eniacprogrammers.org/ |title=ENIAC Programmers Project |publisher=Eniacprogrammers.org |date= |accessdate=2010-10-03}}</ref><ref>{{cite web|url=http://abcnews.go.com/Technology/story?id=3951187&page=1 |title=ABC News: First Computer Programmers Inspire Documentary |publisher=Abcnews.go.com |date=2007-12-04 |accessdate=2010-10-03}}</ref>\n\nInternational Programmers' Day is celebrated annually on 7 January.<ref>{{cite web|url=http://www.internationalprogrammersday.org |title=International Programmers' Day}}</ref>  In 2009, the [[government of Russia]] decreed a professional annual holiday known as [[Programmers' Day]] to be celebrated on 13 September (12 September in leap years). It had also been an unofficial international holiday before that.\n\n==Nature of the work==\n:''Some of this section is from the [http://www.bls.gov/oco/ocos110.htm Occupational Outlook Handbook], 2006\u201307 Edition, which is in the [[public domain]] as a [[work of the United States Government]].''\n\n[[File:\u041e\u0444\u0438\u0441 \u042f\u043d\u0434\u0435\u043a\u0441\u0430 \u0440\u0430\u0431\u043e\u0442\u0430.jpg|270px|thumb|Programmers in the [[Yandex]] headquarters.]]\n\nComputer programmers write, test, [[debug]], and maintain the detailed instructions, called [[computer programs]], that computers must follow to perform their functions. Programmers also conceive, design, and test logical structures for solving problems by computer. Many technical innovations in programming&nbsp;\u2014 advanced computing technologies and sophisticated new languages and programming tools&nbsp;\u2014 have redefined the role of a programmer and elevated much of the programming work done today. Job titles and descriptions may vary, depending on the organization.\n\nProgrammers work in many settings, including corporate [[information technology]] (\"IT\") departments, big [[software companies]], and small service firms. Many professional programmers also work for consulting companies at client sites as [[Independent contractor|contractors]]. [[License|Licensing]] is not typically required to work as a programmer, although [[professional certification]]s are commonly held by programmers. Programming is widely considered a [[profession]] (although some{{Who|date=March 2011}} authorities disagree on the grounds that only careers with legal licensing requirements count as a profession).\n\nProgrammers' work varies widely depending on the type of business for which they are writing programs. For example, the instructions involved in updating financial records are very different from those required to duplicate conditions on an aircraft for pilots training in a flight simulator. Although simple programs can be written in a few hours, programs that use complex mathematical formulas whose solutions can only be approximated or that draw data from many existing systems may require more than a year of work. In most cases, several programmers work together as a team under a senior programmer\u2019s supervision.\n\nProgrammers write programs according to the specifications determined primarily by more senior programmers and by [[systems analyst]]s. After the design process is complete, it is the job of the programmer to convert that design into a logical series of instructions that the computer can follow. The programmer codes these instructions in one of many programming languages. Different programming languages are used depending on the purpose of the program. [[COBOL]], for example, is commonly used for business applications that typically run on [[Mainframe computer|mainframe]] and [[minicomputer|midrange]] computers, whereas [[Fortran]] is used in science and engineering. [[C++]] is widely used for both scientific and business applications. [[Java (programming language)|Java]], [[C Sharp (programming language)|C#]], [[Visual Basic|VB]]  and [[PHP]] are popular programming languages for Web and business applications. Programmers generally know more than one programming language and, because many languages are similar, they often can learn new languages relatively easily. In practice, programmers often are referred to by the language they know, e.g. as ''Java programmers'', or by the type of function they perform or environment in which they work: for example, ''[[database]] programmers'', ''mainframe programmers'', or [[Web developer]]s.\n\nWhen making changes to the [[source code]] that programs are made up of, programmers need to make other programmers aware of the task that the routine is to perform. They do this by inserting comments in the [[source code]] so that others can understand the program more easily. To save work, programmers often use [[Library (computing)|libraries]] of basic code that can be modified or customized for a specific application. This approach yields more reliable and consistent programs and increases programmers' productivity by eliminating some routine steps.\n\n===Testing and debugging===\nProgrammers test a program by running it and looking for [[Software bug|bugs]] (errors). As they are identified, the programmer usually makes the appropriate corrections, then rechecks the program until an acceptably low level and severity of bugs remain. This process is called [[Software testing|testing]] and [[debugging]]. These are important parts of every programmer's job. Programmers may continue to fix these problems throughout the life of a program. Updating, repairing, modifying, and expanding existing programs is sometimes called ''maintenance programming''. Programmers may contribute to [[user guide]]s and [[online help]], or they may work with [[technical writer]]s to do such work.\n\n===Application versus system programming===\nComputer programmers often are grouped into two broad types: application programmers and systems programmers. Application programmers write programs to handle a specific job, such as a program to track inventory within an organization. They also may revise existing packaged software or customize generic applications which are frequently purchased from [[independent software vendor]]s. Systems programmers, in contrast, write programs to maintain and control computer systems software, such as [[operating system]]s and [[database management system]]s. These workers make changes in the instructions that determine how the network, workstations, and [[Central processing unit|CPU]] of the system handle the various jobs they have been given and how they communicate with peripheral equipment such as [[Computer printer|printers]] and [[Data storage device|disk drives]].\n\n===Types of software===\nProgrammers in software development companies may work directly with experts from various fields to create software&nbsp;\u2013 either programs designed for specific clients or packaged software for general use&nbsp;\u2013 ranging from [[video game]]s to educational software to programs for [[desktop publishing]] and financial planning. Programming of packaged software constitutes one of the most rapidly growing segments of the computer services industry. Some companies or organizations \u2013 even small ones \u2013 have set up their own IT team to ensure the design and development of in-house software to answer to very specific needs from their internal end-users, especially when existing software are not suitable or too expensive. This is for example the case in [[research laboratories]].{{cn|date=May 2014}}\n\nIn some organizations, particularly small ones, workers commonly known as ''programmer analysts'' are responsible for both the systems analysis and the actual programming work. The transition from a mainframe environment to one that is based primarily on [[personal computers]] (PCs) has blurred the once rigid distinction between the programmer and the user. Increasingly, adept end users are taking over many of the tasks previously performed by programmers. For example, the growing use of packaged software, such as spreadsheet and database management software packages, allows users to write simple programs to access data and perform calculations.{{cn|date=May 2014}}\n\nIn addition, the rise of the Internet has made [[web development]] a huge part of the programming field. Currently more software applications are [[web application]]s that can be used by anyone with a [[web browser]]. Examples of such applications include the [[Google]] search service, the [[Hotmail]] e-mail service, and the [[Flickr]] photo-sharing service.{{cn|date=May 2014}}\n\nProgramming editors, also known as [[source code editor]]s, are text editors that are specifically designed for programmers or developers for writing the source code of an application or a program. Most of these editors include features useful for programmers, which may include color [[syntax highlighting]], auto indentation, [[auto-complete]], bracket matching, [[Syntax checker|syntax check]], and allows [[plug-in (computing)|plug-in]]s. These features aid the users during coding, [[debugging]] and testing.{{cn|date=May 2014}}\n\n==Globalization==\n{{globalize/US|date=December 2010}}\n\n===Market changes in the UK===\nAccording to BBC, 17% of computer science students could not find work in their field 7 months after graduation in 2009 which was the highest rate of the university subjects surveyed while 0% of medical students were unemployed in the same survey.<ref>[http://www.bbc.co.uk/news/10477551 \"'One in 10' UK graduates unemployed\"] from the [[BBC]]</ref> The UK category system does, however, class such degrees as [[information technology]] and [[game design]] as 'computer science', industries in which jobs can be extremely difficult to find, somewhat inflating the actual figure.<ref>[http://www.plymouth.ac.uk/pages/view.asp?page=23727] ATAS classifications (University of Plymouth)</ref>\n\n===Market changes in the US===\nComputer programming, [[offshore outsourcing]], and [[Foreign Worker Visa]]s became a controversial topic after the crash of the [[dot com bubble]] left many programmers without work or with lower wages. Programming was even mentioned in the 2004 US Presidential debate on the topic of [[offshore outsourcing]].{{Citation needed|date=June 2011}}\n\nLarge companies claim there is a [[skills shortage]] with regard to programming talent. However, US programmers and unions counter that large companies are exaggerating their case in order to obtain cheaper programmers from developing countries and to avoid paying for training in very specific technologies.<ref>[http://heather.cs.ucdavis.edu/MigLtrs.pdf] Migration Letters, Volume: 10, No: 2, pp. 211 \u2013 228 ISSN: 1741-8984 & eISSN: 1741-8992</ref>\n\nEnrolment in computer-related degrees in US has dropped recently due to lack of general interests in science and mathematics and also out of an apparent fear that programming will be subject to the same pressures as manufacturing and agriculture careers.{{Citation needed|date=June 2011}} This situation has resulted in confusion about whether the US economy is entering a \"post-[[Quaternary sector of the economy|information]] age\" and the nature of US [[comparative advantage]]s. Technology and software jobs were supposed to be the replacement for factory and agriculture jobs lost to cheaper foreign labor, but if those are subject to free trade losses, then the nature of the next generation of replacement careers is not clear at this point.{{Citation needed|date=September 2011}}\n\n==See also==\n{{Portal|Computer programming}}\n*[[Development speed]]\n*[[Game programmer]]\n*[[List of programmers]]\n*[[Real Programmer]]\n*[[Script kiddie]]\n*[[Software development process]]\n*[[Software engineering]]\n*[[System administrator]]\n*[[Women in computing]]\n{{Clear}}\n\n==References==\n{{Reflist|colwidth=30em}}\n\n==Further reading==\n* [[Gerald Weinberg|Weinberg, Gerald M.]], ''The Psychology of Computer Programming'', New York: Van Nostrand Reinhold, 1971\n* An experiential study of the nature of programming work: Lucas, Rob. [http://www.newleftreview.org/?view=2836 \"Dreaming in Code\"] ''New Left Review'' 62, March\u2013April 2010, pp.&nbsp;125\u2013132.\n\n==External links==\n{{Wiktionary|programmer|coder}}\n* [http://www.ideosphere.com/fx-bin/Claim?claim=ITJOBS \"The Future of IT Jobs in America\" article]\n* [http://samizdat.mines.edu/howto/HowToBeAProgrammer.html How to be a programmer] - An overview of the challenges of being a programmer\n* The US Department of Labor's description of \"[http://www.bls.gov/ooh/computer-and-information-technology/computer-programmers.htm Computer Programmers]\"\n\n[[Category:Computer programmers|*]]\n[[Category:Computer occupations]]", "Computer repair technician": "{{Multiple issues|primarysources=March 2010|refimprove=November 2007}}\n[[Image:CPR technicians working.jpg|thumb|right|Laptop technicians working at stations (2000). Tagged repairs in process can be seen on lower shelves at left, and service parts in labeled boxes seen above them.]]\nA '''computer repair technician''' is a person who repairs and maintains [[computer]]s and [[Server (computing)|servers]]. The [[technician]]'s responsibilities may extend to include building or configuring new [[computer hardware|hardware]], installing and updating [[computer software|software]] packages, and creating and maintaining [[computer network]]s.\n\n==Overview==\nComputer repair technicians work in a variety of settings, encompassing both the [[Public sector|public]] and [[private sector]]s. Because of the relatively brief existence of the profession, institutions offer certificate and degree programs designed to prepare new technicians, but computer repairs are frequently performed by experienced and [[Professional certification (Computer technology)|certified]] technicians who have little formal training in the field.<ref>[http://www.bls.gov/oco/ocos268.htm Computer Support Specialists and Systems Administrators], Bureau of Labor Statistics, U.S. Department of Labor, ''Occupational Outlook Handbook'', 2006-07 Edition, August 4, 2006.</ref>\n\nA repair technician might work in a corporate [[information technology]] department, a central service center, or a retail computer sales environment. A public sector technician might work in the military, national security or law enforcement communities, health or public safety field, or an educational institution. Despite the vast variety of work environments, all computer technicians perform similar physical and investigative processes, including [[technical support]]. Experienced technicians might specialize in fields such as [[data recovery]], [[System administrator|system administration]], or [[Information Systems Technician|information systems]]. Some technicians are self-employed or own a firm that provides services in a regional area. Some are subcontracted as [[freelancer]]s or [[Information technology consulting|consultant]]s. This type of technician ranges from hobbyists and enthusiasts that volunteer or make a little side money, to those who work professionally in the field.\n\nComputer malfunctions can range from a minor setting that is incorrect, to [[spyware]], [[Computer virus|viruses]], and as far as replacing hardware and an entire [[operating system]]. Some technicians provide on-site services usually at an hourly rate. Others can provide services off-site, where the client can drop off at the repair shop. Some have pickup and drop off services for convenience. Some technicians may also take back old equipment for [[computer recycling|recycling]] (In the EU, this is required under [[Waste Electrical and Electronic Equipment Directive|WEEE]] rules).\n\n==Hardware repair==\nWhile computer hardware configuration varies widely, a repair technician will work with five general categories of hardware; [[desktop computer]]s, [[laptop]]s, [[Server (computing)|servers]], [[computer cluster]]s and [[smartphone]]s / [[mobile computing]]. Technicians also work with and occasionally repair a range of [[peripheral]]s, including [[input device]]s (like [[Computer keyboard|keyboard]]s, [[Mouse (computing)|mice]], and [[Image scanner|scanner]]s), [[output device]]s (like [[Display device|display]]s, [[Computer printer|printer]]s, and [[Loudspeaker|speaker]]s), and [[data storage device]]s such as internal and external [[Hard disk drive|hard drive]]s and disk arrays. Technicians involved in system administration might also work with [[networking hardware]], including [[Router (computing)|router]]s, [[Network switch|switches]], [[Fiber-optic communication|fiber optics]], and [[wireless network]]s.\n\n==Software repair==\nWhen possible, repair technicians protect the computer user's data and settings, so that after repair, the user will not have lost any data and can fully use the device with little interruption. Addressing the issue, the technician could take action as minor as adjusting one or several settings or preferences, but could also apply more involved techniques like installing, uninstalling, or reinstalling various software packages. \nA reliable, but somewhat more complicated, procedure for addressing software issues is known as a restore, in which the computer's original installation image (including operating system and original applications) is reapplied to a [[Disk formatting|formatted]] hard drive.  It should be known though, that anything unique, such as settings, or personal files will be destroyed if not backed up on external media, as this reverts everything back to its original unused state.\n<!-- This needs to be broken into paragraphs -->\n\n==License==\nIn [[Texas]], computer repair companies and professionals are required to have [[private investigator]]s\u2019 licenses if they access computer data for purposes other than diagnosis or repair. Texas Occupations Code, Chapter 1702 section 104, subsection 4(b) <ref>http://www.statutes.legis.state.tx.us/Docs/OC/htm/OC.1702.htm</ref>\n\n==See also==\n{{wikibooks|A+ Certification}}\n*[[Information systems technician]]\n*[[Rework (electronics)]]\n\n==Notes==\n{{reflist}}\n\n==References==\n*[http://diplomaguide.com/articles/Computer_Repair_Tech_Career_Overview.html Overview of job scope]\n*[http://www.cajon.k12.ca.us/personnel_services/pdf/leadcomputerrepairtech.pdf Job description] from a public school district\n\n{{DEFAULTSORT:Computer Repair Technician}}\n[[Category:Computer occupations]]\n[[Category:People in information technology| Computer repair technician]]\n[[Category:Technicians]]"}